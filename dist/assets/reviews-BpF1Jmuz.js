var w=Object.defineProperty;var f=(r,t,e)=>t in r?w(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var o=(r,t,e)=>f(r,typeof t!="symbol"?t+"":t,e);import{A as g,x as v}from"./index-L9FfN0sg.js";class m{constructor(){o(this,"httpClient");this.httpClient=new g}async create(t){try{return this.httpClient.post("/api/review/create",t)}catch(e){throw console.log(e),e}}async findAll(t){try{return this.httpClient.post("/api/review/getMany",t)}catch(e){throw console.log(e),e}}async findOne(t){try{return this.httpClient.post("/api/review/getOne",t)}catch(e){throw console.log(e),e}}async findRatingByCompanyId(t){try{return this.httpClient.post("/api/review/getGroupedBy",t)}catch(e){throw console.log(e),e}}async usefulReview(t){try{return this.httpClient.post("api/review/recommend",t)}catch(e){throw console.log(e),e}}async getfulReview(t){try{return this.httpClient.post("api/review/getRecommend",t)}catch(e){throw console.log(e),e}}async updateStatus(t){try{return this.httpClient.post("/api/review/updateStatus",t)}catch(e){throw console.log(e),e}}}const S=v("review",()=>{const r=new m;async function t(a){var s,n;try{const c=await r.create(a);return{message:"Avaliação criada com sucesso!",success:!0}}catch(c){return{message:((n=(s=c.response)==null?void 0:s.data)==null?void 0:n.error)||"Ocorreu um erro!",success:!1}}}async function e(a){try{const s=await r.findAll(a);return s.status===400?{data:null,success:!1}:{data:s,success:!0}}catch{return{data:null,success:!1}}}async function u(a){try{return{data:await r.findOne(a),success:!0}}catch{return{data:null,success:!1}}}async function i(a){try{return{data:await r.findRatingByCompanyId(a),success:!0}}catch{return{data:null,success:!1}}}async function l(a){try{return{data:await r.usefulReview(a),success:!0}}catch{return{data:null,success:!1}}}async function p(a){try{return{data:await r.getfulReview(a),success:!0}}catch{return{data:null,success:!1}}}async function h(a){try{return{data:await r.findAll(a),success:!0}}catch{return{data:null,success:!1}}}async function y(a){var s,n;try{const c=await r.updateStatus(a);return{message:"Status atualizado com sucesso!",success:!0}}catch(c){return{message:((n=(s=c.response)==null?void 0:s.data)==null?void 0:n.error)||"Erro ao atualizar status!",success:!1}}}return{getAll:e,getOne:u,createReview:t,getRatingByCompanyId:i,usefulReview:l,getfulReview:p,findAllReviewByUser:h,updateStatus:y}});export{S as u};
